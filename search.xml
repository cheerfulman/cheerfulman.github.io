<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>差分</title>
      <link href="/2019/09/17/chafen/"/>
      <url>/2019/09/17/chafen/</url>
      
        <content type="html"><![CDATA[<h3 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h3><h5 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h5><hr><p>输入一个长度为n的整数序列。<br>接下来输入m个操作，每个操作包含三个整数l, r, c，表示将序列中[l, r]之间的每个数加上c。<br>请你输出进行完所有操作后的序列。</p><p><strong>输入格式</strong><br>第一行包含两个整数n和m。</p><p>第二行包含n个整数，表示整数序列。</p><p>接下来m行，每行包含三个整数l，r，c，表示一个操作。</p><p><strong>输出格式</strong><br>共一行，包含n个整数，表示最终序列。</p><p><strong>数据范围</strong><br>1≤n,m≤100000,<br>1≤l≤r≤n,<br>−1000≤c≤1000,<br>−1000≤整数序列中元素的值≤1000</p><p><strong>输入样例：</strong><br>6 3<br>1 2 2 1 2 1<br>1 3 1<br>3 5 1<br>1 6 1<br><strong>输出样例：</strong><br>3 4 5 3 4 2</p><hr><p>定义s为原数组，b为差分数组；<br>b[i] = s[i] - s[i - 1]<br>所以 s为b的前缀和；<br>证明：<br>s[n] = s[1] + s[2] + s[2] + … s[n];<br>s[1] = b[1], s[2] = b[2] - b[1];类推得；<br>b[i] = b[1] + b[2] - b[1] + b[3] - b[2] + … + b[n] - b[n - 1];<br>前后抵消，得s为b的前缀和；</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;vector&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">vector&lt;int&gt; s(100010,0),b(100010,0);</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)cin&gt;&gt;s[i];</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)b[i] = s[i] - s[i - 1];</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        int x,y,z;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        b[x] += z;</span><br><span class="line">        b[y + 1] -= z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n ;i++)&#123;</span><br><span class="line">        b[i] += b[i - 1];</span><br><span class="line">        cout&lt;&lt;b[i]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数模板</title>
      <link href="/2019/09/16/biginterger/"/>
      <url>/2019/09/16/biginterger/</url>
      
        <content type="html"><![CDATA[<h3 id="大数加减乘除模板"><a href="#大数加减乘除模板" class="headerlink" title="大数加减乘除模板"></a>大数加减乘除模板</h3><p>利用vector的做法；</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;vector&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">//一个大整数一个整数的除法，和余数；</span><br><span class="line">vector&lt;int&gt; div(vector&lt;int&gt; &amp;A, int b, int &amp;r)&#123;</span><br><span class="line">    vector&lt;int&gt; c;</span><br><span class="line">    //int tmp = 0;</span><br><span class="line">    r = 0;</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        r = r * 10 + A[i];</span><br><span class="line">        c.push_back(r / b);</span><br><span class="line">        r = r % b;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(c.begin(),c.end());</span><br><span class="line">    <span class="keyword">while</span>(c.size() &gt; 1 &amp;&amp; c.back() == 0) c.pop_back();</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">//一个大整数，一个整数的乘法</span><br><span class="line">vector&lt;int&gt; muti(vector&lt;int&gt;A, int b)&#123;</span><br><span class="line">    vector&lt;int&gt; c;</span><br><span class="line">    int tmp = 0;</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        tmp += A[i] * b;</span><br><span class="line">        c.push_back(tmp % 10);</span><br><span class="line">        tmp /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">        c.push_back(tmp % 10);</span><br><span class="line">        tmp /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">//两个大整数</span><br><span class="line">vector&lt;int&gt; muti1(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    vector&lt;int&gt; c(A.size() + B.size());</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j = 0; j &lt; B.size(); j++)&#123;</span><br><span class="line">            c[i + j + 1] += A[i] * B[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(int i = A.size() + B.size() - 1; i &gt; 0; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c[i] &gt;= 10)&#123;</span><br><span class="line">            c[i - 1] += c[i] / 10;</span><br><span class="line">            c[i] %= 10;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">//注意有可能有前导0；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//大数减法；</span><br><span class="line">bool cmp(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.size() != B.size()) <span class="built_in">return</span> A.size() &gt; B.size();</span><br><span class="line">    <span class="keyword">for</span>(int i = A.size() - 1; i &gt;= 0; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i] != B[i]) <span class="built_in">return</span> A[i] &gt; B[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;int&gt; sub(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    <span class="keyword">if</span>(cmp(A,B))&#123;</span><br><span class="line">        vector&lt;int&gt;c;</span><br><span class="line">        int tmp = 0;</span><br><span class="line">        <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">            tmp += A[i];</span><br><span class="line">            <span class="keyword">if</span>(i &lt; B.size()) tmp -= B[i];</span><br><span class="line">            c.push_back((tmp + 10)%10);</span><br><span class="line">            //tmp /= 10;</span><br><span class="line">            <span class="keyword">if</span>(tmp &lt; 0)tmp = -1;</span><br><span class="line">            <span class="keyword">else</span> tmp = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(c.size() &gt; 1 &amp;&amp; c.back() == 0) c.pop_back();</span><br><span class="line">        <span class="built_in">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">"-"</span>;</span><br><span class="line">            <span class="built_in">return</span> sub(B,A);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">//大数加法</span><br><span class="line">vector&lt;int&gt; add(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.size() &lt; B.size()) <span class="built_in">return</span> add(B,A);</span><br><span class="line">    int tmp = 0;</span><br><span class="line">    vector&lt;int&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        tmp += A[i];</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.size())tmp += B[i];</span><br><span class="line">        c.push_back(tmp%10);</span><br><span class="line">        <span class="keyword">if</span>(tmp &gt;= 10) tmp = 1;</span><br><span class="line">        <span class="keyword">else</span> tmp = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tmp)c.push_back(tmp);</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    string a,b;</span><br><span class="line">    //int b,r = 0;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    vector&lt;int&gt;A,B,C;</span><br><span class="line">    <span class="keyword">for</span>(int i = a.length() - 1; i &gt;= 0; i--)A.push_back(a[i] - <span class="string">'0'</span>);</span><br><span class="line">    <span class="keyword">for</span>(int i = b.length() - 1; i &gt;= 0; i--)B.push_back(b[i] - <span class="string">'0'</span>);</span><br><span class="line">    //C = div(A,b,r);</span><br><span class="line">    C = add(A,B);</span><br><span class="line">    <span class="keyword">for</span>(int i = C.size() - 1; i &gt;= 0; i--)cout&lt;&lt;C[i];</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    //cout&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>First</title>
      <link href="/2019/09/11/first/"/>
      <url>/2019/09/11/first/</url>
      
        <content type="html"><![CDATA[<h3 id="cheerfulman"><a href="#cheerfulman" class="headerlink" title="cheerfulman"></a>cheerfulman</h3><blockquote><p>可能我才是醉帅的</p></blockquote><p>请问,在哮喘发作的时候做什么会解脱的更快呢<em>(:_」∠)</em>,bilibili是国内知名的视频弹幕网站,这里有最及时的动漫新番,最棒的ACG氛围,最有创意的.</p><ul><li>写一个列表：</li><li>无序列表</li><li>我的</li></ul><ol><li>我的</li><li>阿斯蒂芬</li><li>阿斯蒂芬</li></ol><p><img alt="123" data-src="C:%5CUsers%5CAdministrator%5CDesktop%5Ccbcecf65df8cbf993c0c73b2e22a9081.jpeg" class="lozad"><br><a href="www.baidu.com">baidu</a><br><strong>卢鸿铭</strong><br><em>袁一凡</em></p><p align="left"><font face="宋体" color="red" size="28">字体、颜色和字号</font></p>]]></content>
      
      
      <categories>
          
          <category> kk </category>
          
      </categories>
      
      
        <tags>
            
            <tag> c++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello cheerfulman</title>
      <link href="/2019/09/11/hello-world/"/>
      <url>/2019/09/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> -wu </category>
          
      </categories>
      
      
    </entry>
    
    
  
  
</search>
