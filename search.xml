<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>第十章 初识Java面向对象</title>
      <link href="/2019/10/08/%E7%AC%AC%E5%8D%81%E7%AB%A0_%E5%88%9D%E8%AF%86Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/"/>
      <url>/2019/10/08/%E7%AC%AC%E5%8D%81%E7%AB%A0_%E5%88%9D%E8%AF%86Java%E9%9D%A2%E5%90%91%E5%AF%B9%E8%B1%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="第十章-初识Java面向对象"><a href="#第十章-初识Java面向对象" class="headerlink" title="第十章 初识Java面向对象"></a>第十章 初识Java面向对象</h1><hr><h2 id="提纲"><a href="#提纲" class="headerlink" title="提纲"></a>提纲</h2><ul><li>10.1 类与对象的概念<ul><li>10.1.1 对象</li><li>10.1.2 类</li><li>10.1.3 类与对象的关系</li></ul></li><li>10.2 Java面向对象程序设计的三大特点<ul><li>10.2.1 封装</li><li>10.2.2 继承</li><li>10.2.3 多态</li></ul></li><li>10.3 复合语句</li><li>10.4 类<ul><li>10.4.1 概念</li><li>10.4.2 成员变量</li><li>10.4.3 成员方法</li><li>10.4.4 对象的创建、堆与栈、使用和生命周期</li><li>10.4.5 变量与方法四种形态使用示例</li><li>10.4.6 成员变量与局部变量的区别</li><li>10.4.7 属性与方法调用总结</li><li>10.4.8 Java类包</li><li>10.4.9 代码排版的快捷键</li><li>10.4.10 传递参数的类型</li><li>10.4.11 返回值类型</li></ul></li><li>10.5 作业</li></ul><hr><h2 id="一、类与对象的概念"><a href="#一、类与对象的概念" class="headerlink" title="一、类与对象的概念"></a>一、类与对象的概念</h2><ul><li>10.1.1 对象<ul><li>现实世界中，随处可见的事物就是对象。比如人、书桌、电脑、瓶子、显示器、主机等。每一个对象又可以划分为两个部分，即 <strong>静态部分</strong> 与 <strong>动态部分</strong> 。 </li><li><strong>静态部分</strong> ：就是不能动的部分，这个部分被称为 <strong>“属性”</strong> 。任何对象都会具备其自身的属性，如一个人，其属性可以包括： <strong>高矮、胖瘦、性别、年龄</strong> 等。又比如： <strong>瓶子</strong> 的属性可以是 <strong>材料、容积、品牌、颜色、高矮等</strong> 。</li><li><strong>动态部分：</strong>：就是一个对象会执行哪些动作，也叫做 <strong>行为</strong> 。比如人的动作可以有： <strong>哭泣、微笑、说话、吃饭、行走、打球等等</strong> 。</li><li>例：一只大雁从北方飞往南方。对这个问题从对象的角度进行分析。<ol><li>首先，从这个问题中抽象出对象，这里的抽象出的对象是：大雁.</li><li>然后，识别这个对象的属性。对象具备的属性都是静态属性：如，大雁有一对翅膀、黑色的羽毛、一只嘴、两只脚等等。</li><li>接着，识别这个对象的动态行为。即大雁进行的动作：如，飞行、觅食、跳跃等。</li><li>最后，识别这个对象的属性和行为后，这个对象就被定义完成了。</li></ol></li></ul></li><li>10.1.2 类<ul><li>类的概念：类就是同一类事物的统称，比如：鸟类就包括所有的鸟对象，即将所有的鸟归为一个鸟类。但是不能将一个事物描述成一类事物，比如一只鸟不能称为鸟类。</li><li>类的特点：<ul><li>同一类的事物他们都会有一些共有的属性和行为。比如人类，不论是男人、女人、学生、大人、老师等等，他们都具有相同的属性：姓名、年龄、身高、体重、有血、有肉等等。也具有相同的行为：吃饭、走路、哭泣、说话等。</li><li>由于一个类有很多对象，每一个对象的属性的值是有差异的：比如，姓名可以不一样、身高有高有矮、体重也有重的有轻的。行为也会有不一样：比如有的人吃饭用左手、走路姿势快慢有差别等等。</li></ul></li></ul></li><li>10.1.3 类与对象的关系：<ul><li>对象是具体的事物，将一类具有相似属性和行为的对象抽象为类。即类是抽象的，对象是具体的。比如：你要别人去买电脑，你跟他说：去跟我买台电脑，别人听了之后肯定会疑惑，电脑有那么多牌子，那么多价格，你到底要买哪个？从这个例子可以看出，电脑就是一个类，具体的牌子，配置，价格的一台电脑就是一个对象，它是具体存在的。</li><li>先有具体的对象，然后抽象各个对象之间象的部分，归纳出来类，通过类再认识其他对象。</li></ul></li></ul><hr><h2 id="10-2-面向对象思想"><a href="#10-2-面向对象思想" class="headerlink" title="10.2 面向对象思想"></a>10.2 面向对象思想</h2><ul><li>10.2.1 封装：<ul><li>属性能够描述事物的特征，方法能够描述事物的动作。封装就是把同一类事物的共性（包括属性和方法）归到同一类中，方便使用。</li><li>具体什么是封装： <strong>封装</strong> 也称信息隐藏，是指对于数据的操作封装起来，使其成为一个不可分割的 <strong>整体</strong> ，尽可能的隐藏数据细节，只保留一些接口使其与外界发生联系。也就是说用户无需知道内部的数据和方法的具体实现细节，只需根据留在外部的接口进行操作就行。    </li><li>好处：<ol><li><strong>实现了专业的分工</strong></li><li><strong>减少耦合(即减少紧密配合与相互影响)</strong></li><li><strong>类内部的结构能够自由修改</strong></li><li><strong>隐藏信息，实现细节</strong></li></ol></li></ul></li><li>10.2.2 继承<ul><li>什么是继承：继承是从已有的类中派生出新的类，新的类能吸收已有类的数据属性和行为，并能扩展新的能力。就跟父亲与儿子的关系一样，一个父亲可以有多个儿子，一个儿子只能有一个亲生父亲。</li><li>好处：<ol><li><strong>继承关系是传递的</strong>。 </li><li><strong>继承提高了代码的复用性</strong>。</li><li><strong>提高了代码的维护性</strong>。</li></ol></li></ul></li><li>10.2.3 多态<ul><li>什么是多态：某一种事物有不同的具体的体现。比如，人类有吃饭的行为，但这个行为到每一个具体的对象后就会有不同的体现，吃饭的优雅程度、快慢、左手还是右等。同一个事物在不同的环境条件下也会有不同的结果。这就是多态。</li><li>好处：<strong>提高了程序的扩展性。</strong></li></ul></li></ul><hr><h2 id="10-3-复合语句"><a href="#10-3-复合语句" class="headerlink" title="10.3 复合语句"></a>10.3 复合语句</h2><ol><li><p>概念：Java语言的复合语句是整个块区为单位的语句，所以又称块语句或者代码块。复合语句由开括号“{”开始，闭括号“}”结束。</p></li><li><p>定义复合语句：定义一个类或者方法时，他们都是以“{}”作为开始和结束的标记。</p></li><li><p>复合语句的使用：复合语句的每个语句都是从上到下被执行，以整个块为单位，能够用在任何一个单独语句可以用到的地方，复合语句中也可以嵌套复合语句。</p></li><li><p>例：</p><pre><code>int x = 20;{//复合语句1开始    int y = 40;    System.out.println(y);    int z = 245;    boolean b;    {//复合语句2开始        b = x &gt; z;        System.out.println(b);    }//复合语句2结束}//复合语句1结束//复合语句为局部变量创建了一个作用域，在该作用域中创建的局部变量只能作用域该作用域//（是从创建该局部变量开始，到复合语句结束，即便是创建在复合语句中，在创建变量的上面使用变量是不可以的。）//在某个变量作用域之外使用该变量会发生错误//在变量作用域之外使用b、y、z则会出现错误，但是变量x可以在整个方法体中使用//System.out.println(b+y+z);String word = &quot;Hello Java&quot;;System.out.println(word);//执行结果：40falseHello Java</code></pre></li></ol><hr><h2 id="10-4-类"><a href="#10-4-类" class="headerlink" title="10.4 类"></a>10.4 类</h2><ul><li><p>10.4.1 概念:类是封装对象的属性和行为的载体，而在Java语言中对象的属性以 <strong>成员变量</strong> 的形式存在，对象的行为以 <strong>成员方法</strong> 的形式存在。</p></li><li><p>10.4.2 成员变量：</p><ul><li><p>概念：在Java中，对象的属性称为<strong>成员变量</strong>，也称<strong>字段</strong>。</p></li><li><p>定义类和属性的步骤：</p><ol><li><p>首先创建一个图书类，名称为Book。 <strong>注意：类名首字母必须大写！</strong></p></li><li><p>在类中设置三个属性，即三个成员变量：分别为id（图书编号）、name（图书名称）、category（图书分类）。 <strong>注意：成员变量必须要注释。</strong></p></li><li><p>源代码：</p><pre><code>public class Book {    int id;//图书编号    String name;//图书名称    String category;//图书分类}</code></pre></li></ol></li></ul></li><li><p>10.4.3 成员方法：</p><ul><li><p>概念：在Java中，对象的<strong>行为</strong>称为成员方法。</p></li><li><p>方法的主体语法形态：</p><pre><code>访问权限修饰符 返回值类型 方法名(参数1,参数2......){    //....方法体    return 返回值;}</code></pre></li><li><p>方法的主体可分为<strong>四种</strong>形态：</p><ol><li><p>无参数 无返回值</p><ul><li><p>语法结构：</p><pre><code>权限修饰符 void 方法名(){    ...//方法体}</code></pre></li><li><p>示例：</p><pre><code>//展示自己的信息的方法public void display(){    System.out.println(&quot;我叫XXX,今年XX岁&quot;);}</code></pre></li></ul></li></ol><p>  <strong>注意：方法名命名方式与变量命名方式一样。首字母要小写。</strong></p><ol start="2"><li><p>有参数 无返回值</p><ul><li><p>语法结构：</p><pre><code>权限修饰符 void 方法名(参数1,参数2......){    ...//方法体}</code></pre></li><li><p>示例：</p><pre><code>//编写乞讨的方法public void beg(int money){    System.out.println(&quot;谢谢你给了我&quot;+money+&quot;元&quot;);}</code></pre></li></ul></li><li><p>无参数 有返回值</p><ul><li><p>语法结构：</p><pre><code>权限修饰符 返回值类型 方法名(){    ...//方法体    return 返回值;}</code></pre></li><li><p>示例：</p><pre><code>//编写买花的方法public String buyFlowers(){    String flower = &quot;一支玫瑰花&quot;;    return flower;}</code></pre></li></ul></li><li><p>有参数 有返回值</p><ul><li><p>语法结构：</p><pre><code>权限修饰符 返回值类型 方法名(参数类型 参数名,参数类型 参数名.....){    ...//方法体    return 返回值;}</code></pre></li><li><p>示例：</p><pre><code>//编写求两个数求和的方法public int sum(int a,int b){    int sum = a + b;    return sum;}</code></pre></li></ul></li></ol></li></ul></li><li><p>10.4.4 对象的创建、堆与栈、使用和生命周期</p><ul><li><p>对象的创建</p><ol><li><p>代码演示</p><pre><code>//首先，创建一个图书book类public class Book {    int id = 666;//图书编号    String name;//图书名称    //自我展示的方法    public void display(){        System.out.println(&quot;图书编号是：&quot;+id+&quot;,图书名称是：&quot;+name);    }}//然后，创建一个main方法，本类中创建或者新建一个Test类都可以public static void main(String[] args) {    //创建对象的两种方法    //方法一：    //其中：Book为类名，book为创建Book对象的名字，new创建对象的操作符    Book book = new Book();    //方法二（匿名对象）：匿名对象是指没有栈空间的对象，即没有明确的名字给出对象。    //匿名对象使用的是堆内存，是通过关键字new进行开辟，因为没有对应的栈内存空间引用，所以对象只能使用一次。    new Book().display();}</code></pre></li><li><p>总结：</p><ul><li>对象book被创建出来出来时，内存就为这个对象分配了存储空间。</li><li>每个对象都是相互独立的，在内存中占用独立的内存地址。</li><li>每个对象都具有自己的生命周期。当一个对象的声明周期结束时，这个对象就会变成垃圾，被Java虚拟机自带的垃圾回收机制处理掉。不能再被使用。（垃圾回收机制以后再讲）</li></ul></li></ol></li><li><p>Java中堆与栈的定义（见图解:Java中堆与栈的区别.png）<br><img alt="Java中堆与栈的区别" data-src="%E8%AF%BE%E4%B8%8A%E5%9B%BE%E7%89%87/Java%E4%B8%AD%E5%A0%86%E4%B8%8E%E6%A0%88%E7%9A%84%E5%8C%BA%E5%88%AB.png" class="lozad"></p><ol><li><p>栈（stack）：存放一些基本类型的变量和对象的引用变量。</p><ul><li><p>八种基本数据类型（不包括String，因为String是一个类）、创建对象时没有new关键字的左边部分称为对象的引用。</p><pre><code>public static void main(String[] args) {    int a = 1;    double b = 2.6;    boolean c = true;    Book book = null;//这个称为对象引用}//执行结果：a=1,b=2.6,c=true,book=null</code></pre></li></ul><p> <strong>总结：在main直接定义变量时为局部变量，必须要初始化才能使用该变量。而在类中定义的成员变量则可以不用手动初始化，因为在创建对象的时候会对其进行初始化。</strong></p></li><li><p>堆（heap）：存放由new创建的对象和数组。</p><pre><code>public static void main(String[] args) {    //创建对象    Book book = new Book();    //创建数组    int[] arri = new int[10];    System.out.println(&quot;book=&quot;+book+&quot;,arri=&quot;+arri);}//执行结果：book=com.zxjy.Book@c3c749,arri=[I@150bd4d//打印出栈中的内存地址</code></pre></li></ol></li><li><p>对象的使用（即访问类中成员变量与成员方法）</p><ul><li><p>调用步骤    </p><ol><li>创建一个类，类中有属性和方法</li><li>创建一个测试类Test，类中有一个main方法</li><li>创建这个类的一个对象</li><li>使用创建的对象名.属性名调用类的属性</li><li>使用创建的对象名.方法名调用类的方法</li></ol></li><li><p>代码演示：            </p><pre><code>public static void main(String[] args) {    //创建两个Book类的对象    Book book1 = new Book();    Book book2 = new Book();    book1.id = 888;    book1.name = &quot;高考满分作文&quot;;    //使用第一个对象调用类的成员变量，使用创建的对象名.属性名调用类的属性    book1.display();    book2.name = &quot;青年文摘&quot;;    //使用第二个对象调用类的成员变量，使用创建的对象名.方法名调用类的方法    book2.display();}//执行结果图书编号是：888,图书名称是：高考满分作文图书编号是：666,图书名称是：青年文摘</code></pre></li><li><p>总结：</p><ul><li>调用方式：首先实例化一个对象，使用对象名加上“.”操作符调用类的成员变量和成员方法。最后直接用“=”给成员变量赋值。</li><li>两个对象相互独立，改变一个对象的任何成员变量的值并不会影响到另一个对象。</li></ul></li></ul></li><li><p>对象的生命周期</p><ol><li><p>概念：每个对象都会有生命周期，当对象的生命周期结束时，分配给该对象的内存地址会被回收。其他语言需要手动回收，Java中有一套完整的垃圾自动回收机制。</p></li><li><p>对象在什么时候会被视为垃圾：</p><ul><li><p>对象的引用超出其作用范围时：</p><pre><code>public static void main(String[] args) {    int a = 99;    {        //创建对象：对象的生命周期开始        Book book = new Book();        //使用对象：对象的生命周期过程        book.id = 100;        book.name = &quot;王尼玛选集&quot;;        book.display();        //对象作用范围只属于该代码块，再往下已超出其作用范围，对象生命周期消亡    }    //这里不能使用book，因为超出了它的使用范围    //System.out.println(book);    System.out.println(a);}</code></pre></li><li><p>将对象赋值为null时：</p><pre><code>public static void main(String[] args) {    int a = 99;    {        //创建对象：对象的生命周期开始        Book book = new Book();        //使用对象：对象的声明周期过程        book.id = 100;        book.name = &quot;王尼玛选集&quot;;        book = null;//这里对象被赋值为null，生命周期消亡。此时并未超出作用范围        book.display();//这里将不能再调用方法，否则会出现运行错误。    }    System.out.println(a);}</code></pre></li></ul></li></ol></li></ul></li><li><p>10.4.5 变量与方法四种形态使用示例：定义一个人类Person，类中有属性姓名name、年龄age。类中有方法：自我介绍的方法、求两个整数和的方法、乞讨的方法、买花的方法。要求：另外创建一个测试类，在main方法中给属性赋值并调用类中的方法。</p><pre><code>//1.创建Person类public class Person {    String name;//姓名    int age;//年龄    //自我介绍的方法    public void display(){        System.out.println(&quot;我叫&quot;+name+&quot;,今年&quot;+age+&quot;岁&quot;);    }    //编写乞讨的方法    public void beg(int money){        System.out.println(&quot;谢谢你给了我&quot;+money+&quot;元&quot;);    }    //编写买花的方法,结果得到一枝玫瑰花    public String buyFlowers(){        String flower = &quot;一支玫瑰花&quot;;        return flower;    }    //编写计算两个整数的和的方法，结果得到两个数的和    public int sum(int a,int b){        int sum = a + b;        return sum;    }}//2.创建Test测试类public class Test {    public static void main(String[] args) {        Person person1 = new Person();//创建人类的一个对象        person1.name = &quot;刘德华&quot;;//调用人类的属性并赋值        person1.age = 18;        //如何调用无参数 无返回值的方法：直接调用        person1.display();//调用人类中展示自己信息方法        //如何调用有参数 无返回值的方法：        person1.beg(100);//调用人类中乞讨方法，并传递一个值，即钱数        //如何调用无参数 有返回值的方法：        //调用买花的方法，买完花返回了花给我，所以必须去接收花        String flower = person1.buyFlowers();        System.out.println(&quot;买到了什么花：&quot;+flower);//打印得到的花        //如何调用有参数 有返回值的方法：        //调用计算两个数和的方法，因为这个两个数还没有值，所以传递两个值过去        //然后去接收得到的值        int sum = person1.sum(10, 20);        System.out.println(&quot;总和：&quot;+sum);//打印得到的总和        //再创建一个人类对象，这是另外一个人，所以对象名必须不相同        Person person2 = new Person();        person2.name = &quot;苍井空&quot;;        person2.age = 14;        person2.display();//调用展示信息的方法    }}//执行结果：//两个人类对象的信息不同，因为是两个人我叫刘德华,今年18岁谢谢你给了我100元买到了什么花：一支玫瑰花总和：30我叫苍井空,今年14岁</code></pre></li><li><p>10.4.6 成员变量与局部变量的区别</p><ol><li><p>定义位置：成员变量定义在类中，而局部变量定义在方法中</p></li><li><p>作用范围：成员变量作用于整个类，而局部变量作用于代码块中，且是从该变量声明开始，到该代码块结束。</p></li><li><p>例：</p><pre><code>//1.创建Person类public class Person {    String name;//姓名    int age;//年龄    //自我介绍的方法，name和age两个变量整个类都能用    public void display(){        System.out.println(&quot;我叫&quot;+name+&quot;,今年&quot;+age+&quot;岁&quot;);    }    //编写乞讨的方法，这里的money只能在beg方法中使用    public void beg(int money){        System.out.println(&quot;谢谢你给了我&quot;+money+&quot;元&quot;);    }    //看局部变量在方法内的作用范围    public void doInt(){        int id = 0;//这里id的作用范围是整个方法        for (int i = 0; i &lt; 10; i++) {            System.out.println(i);//这里i的作用范围是当前整个for循环        }        //在不嵌套区域可以定义同名、同类型的局部变量i，因为上面i的作用范围只在上面的for循环之内        for (int i = 0; i &lt; 3; i++) {            System.out.println(i);//这里i的作用范围是当前整个for循环            //这样定义id是错误的，因为这个for循环是嵌套于这个doInt方法中，而定义的局部变量            //id是属于定义这个局部变量开始到方法结束，所以内部不可以再定义相同类型与名字的变量            int id;        }        System.out.println(id);//使用id时必须给id赋值，否则会报错    }}</code></pre></li></ol></li><li><p>10.4.7 属性与方法调用总结：</p><ul><li>属性：公共属性可以直接调用并赋值。私有的属性必须通过特定的方法来调用。</li><li>四种形态的方法如何调用：<ol><li>无参数 无返回值：直接调用；</li><li>有参数 无返回值：调用的时候必须传递一个与方法定义的参数类型的值进去，比如上述例子中，定义的money是int类型的数据，调用的时候就必须传递一个int类型的数据；</li><li>无参数 有返回值：直接调用，但是调用完之后必须要用一个与返回值类型相同的数据类型去接收，比如上述例子中，买花返回值类型是String，必须要用String来接收并使用；</li><li>有参数 有返回值：调用的时候必须传递参数值，然后再用与返回值类型相同的数据类型去接收。</li></ol></li></ul></li><li><p>10.4.8 Java类包</p><ul><li>类名冲突：Java中是不允许同一个包中出现两个同名类存在，但是如果想要写两个同名且功能不同的类，则需要放置在不同的包中。</li><li>完整的类路径：在使用某个类时，入Scanner，因为这个类是隶属于java.util包中，所以直接编写其全路径也是可以的：java.util.Scanner scan = new Scanner(System.in);</li><li>创建包：点击空白处右键–new–package–com…..。</li><li>导入包：直接导入这个类的包，即在这个类文件的最上头，写入import 类的全路径;即可。（注意：同包下的类互相使用时，不需要导包）</li></ul></li><li><p>10.4.9 代码排版的快捷键：</p><ul><li>方法1:选中要排版的代码行数，按ctrl+i直接格式对其。</li><li>方法2:不用选中，直接ctrl+shift+f。</li></ul></li><li><p>10.4.10 传递参数的类型</p><ol><li><p>八种基本数据类型+String类型</p><pre><code>public void one(byte b, short s, int i, double d, char c, float f,        long l, boolean bl, String str){}</code></pre></li><li><p>参数为数组，数组的值与长度不确定</p><pre><code>public void two(int[] arris, String[] strs){    System.out.println(arris.length);}</code></pre></li><li><p>参数为对象，Car c = new Car();</p><pre><code>/** * 人开车的方法 * @param c 汽车对象 */public void run(Car c){    c.name = &quot;老爷车&quot;;    c.carNum = &quot;湘A88888&quot;;    c.move();}</code></pre></li><li><p>…:String…strs代表传递任意数量该类型的参数：八种基本数据类型与String类型都可以，int…ins，对象也可以，数组也可以。（注意：这个带…的参数类型只能写一个，而且必须写在所有参数的最后！）</p><pre><code>public void three(String...strs){    System.out.println(strs);}</code></pre></li></ol></li><li><p>10.4.11 返回值类型：八种基本数据类型+String类型、数组、对象。</p></li></ul><h2 id="10-5-作业"><a href="#10-5-作业" class="headerlink" title="10.5 作业"></a>10.5 作业</h2><ol><li>写一个人的类Person，类中有属性：姓名name、年龄age、性别sex。有一个展示自我信息display的方法。写一个测试类Test，创建一个人类对象p，将此人的姓名符值为“麻子”，年龄为18，性别为’男’。显示p的信息。</li><li>写一个狗的类Dog，类中有属性：姓名name、颜色color、体重weight。有一个展示狗信息display的方法。再写一个测试类Test，创建一个狗类对象d1，将此狗的姓名符值为“花花公子”，颜色为“黄色”，体重为32.5公斤，显示d1狗的信息。然后再重新创建一个狗类对象d2，将此狗的姓名符值为“黑熊”，颜色为“黑色”，体重为23.5公斤，再显示d2狗的信息。</li><li>写一个传奇游戏中的猪Pig类，类中有属性：颜色color、身高height、攻击力attack、准确度Accu。有一个展示猪信息display的方法。再写一个测试类，生成一个猪的对象p1，将此猪的颜色值为“白色”，身高为5，攻击力为50，准确度为0.8。要求输出此猪的信息格式为：一只白色的猪，个头5厘米，攻击为为50点血，准确度为0.8，我好怕怕呀。</li><li>写一个牌Card的类，类中有属性：花色color、值value。有一个展示此牌信息display的方法。要求写一个测试类Test，生成一张牌对象c，将此牌的花色设为“梅花”，将此牌的值设为5。最后显示此牌的信息，要求格式为:梅花5。</li><li>写一个日期Date类，类中有属性：年year、月month、日day。有一个展示此牌信息display的方法。要求写一个测试类Test，生成一个日期对象d，设置此日期对象的年为2008，设置此日期的月为10，设置此日期对象的日为1，最后显示此日期，要求格式为：2008年10月1日。</li><li>写一个狗Dog类，类中的属性：品种type，颜色color，体重weight。写出相应的测试类显示自身信息。</li><li>写一个长方形Rectangle的类，类中的属性：长方形的长length，宽width，类中有展示所有信息的display方法。写出相应的测试类。</li><li>写一个学生Student的类，类中的属性：学生的名字name，学生的java成绩JavaScore，学生的sql成绩sqlScore，学生的C#成绩cScore,类中有展示所有信息的display方法，写出相应的测试类。</li><li>写一个汽车Car的类，类中有属性：品牌brand，价格price，颜色color，类中有展示所有信息的display方法，写出相应的测试类。</li><li>写一个猪Pig类，类中的属性：品种type，颜色color，攻击力attack。类中有方法：<ul><li>无参数无返回值的方法：<ol><li>猪走路的方法walk，没有返回值，要求输出格式为“某某品种的某某颜色的猪走来走去”。</li><li>猪打人的方法strike，没有返回值，要求输出格式为“某某品种的某某颜色的猪打人了，攻击力为多少”。<ul><li>有参无返回：猪吃饭的方法eat，传入食物food，要求输出格式为“某某品种的某某颜色的猪在吃某某”。</li><li>无参有返回：猪放屁的方法。要求返回信息“某某品种的某某颜色的猪在放屁”。</li><li>有参有返回：猪买东西的方法shopping。给猪10块钱，去买东西，买回来20个棒棒糖。</li></ul></li></ol></li></ul></li><li>写一个计算机Computer类，类中用属性价格price、品牌brand、出厂日期date。<ul><li>无参无返回：<ol><li>写计算机通电的方法callElc，要求输出“正在通电”。</li><li>写计算机开机的方法startUp，要求输出“正在开机”。</li><li>写计算机关机的方法shutDown，要求输出“正在关机”。</li></ol></li><li>有参有返回：<ol><li>有方法getEvenNum：传入一个数判断这个数是否为偶数的方法，如果这个数是偶数就输出“true”，否则输出“false”。</li><li>有方法getMax：传入两个整数，进行比较，输出两个数中的最大值的方法。</li><li>有方法getMin：传入三个double型的数据，进行比较，输出三个数中的最小值的方法。</li><li>有方法sum：传入三个double型的数据，求和输出和为多少。</li></ol></li></ul></li><li>写一个汽车Car的类，类中有属性：品牌brand，价格price，颜色color。类中有方法：<ol><li>显示当前汽车对象的所有属性的方法dispaly。</li><li>汽车启动的方法startUp，要求输出“XX品牌的汽车启动了”。</li><li>汽车加速的方法speedUp，要求输出“XX品牌的汽车加速中”。</li><li>汽车被卖的方法sold，要求输出“XX品牌的汽车被以XX元的价格卖了”。</li></ol></li><li>写一个榨汁机Juicer类，属性：价格price，品牌brand。类中有方法：<ol><li>写榨汁机通电的callElc方法，要求输出“正在通电”，没有返回。</li><li>写榨汁机开机的startUp方法，要求输出“正在开机”，记住开机之前必须调用通电的方法，没有返回。</li><li>榨汁的Juice方法：传入不同的水果，就得到不同的果汁。（如：传入西瓜得到西瓜汁）。</li></ol></li><li>写一个数学家Mather的类，类中有方法：<ol><li>传入一个整数，返回这个整数的个位数是几的getSingle方法。</li><li>传入一个整数，返回这个整数的立方的getCube方法。</li><li>传入一个正整数，计算从1加到此整数的和是多少的sum方法。比如输入一个5那么就计算1+2+3+4+5=15，最后返回15。</li></ol></li><li>写一个学生的类，类中的属性学生的名字，学生的java成绩，学生的sql成绩，学生的C#成绩。类中有方法：<ol><li>学生学习的方法，无返回，要求输出“学生在学习”。</li><li>返回学生所有功课总成绩的方法。</li><li>返回学生把有功 课平均分的方法。</li></ol></li><li>写一个长方形的类，类中的属性：长方形的长，宽。类中有方法：<ol><li>移动的方法，没有返回值，要求输出“长方形在移动”。</li><li>变化的方法，没有返回值，要求输出“长方形正在变化”。</li><li>显示此长方形信息的方法。</li><li>得到长方形周长的方法。返回此长方形的周长。</li><li>得到长方形的面积的方法，返回此长方形面积。</li></ol></li><li>写一个汽车司机的类，类中有属性：姓名，性别，年龄，驾驶证号，汽车牌号。类中有方法：<ol><li>显示所有数据的方法。</li><li>司机开车的方法，显示“某某司机正在开某某牌号的车”。司机停车的方法，显示“某某司机把某某牌号的车停了下来”。</li><li>检查此司机是否是某某姓名的方法，要求传入一个司机的姓名，检查这个姓名是否是此司机的姓名，要求返回一个true或false。</li><li>检查此司机是否是某某汽车牌号的方法，要求传入一个车牌号，检查这个牌号是否是此司机的汽车牌号，要求返回一个true或false。</li></ol></li><li>写一个数学家的类，类中有方法：<ol><li>传入一个double类型的的数组{4.2,4.5,5.6,1.2,7.8,3.4}求这个数组的和，将结果返回。</li><li>传入一个double类型的的数组{4.2,4.5,5.6,1.2,7.8,3.4}将这个数组最大，将最大值返回。</li></ol></li></ol>]]></content>
      
      
      <categories>
          
          <category> JAVA </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JAVA </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>最长连续不重复子序列</title>
      <link href="/2019/09/20/shuangzhizhen/"/>
      <url>/2019/09/20/shuangzhizhen/</url>
      
        <content type="html"><![CDATA[<h1 id="最长连续不重复子序列"><a href="#最长连续不重复子序列" class="headerlink" title="最长连续不重复子序列"></a>最长连续不重复子序列</h1><hr><p><code>例题:</code><br>给定一个长度为n的整数序列，请找出最长的不包含重复数字的连续区间，输出它的长度。<br><strong>输入格式</strong><br>第一行包含整数n。<br>第二行包含n个整数（均在0~100000范围内），表示整数序列。<br><strong>输出格式</strong><br>共一行，包含一个整数，表示最长的不包含重复数字的连续子序列的长度。<br><strong>数据范围</strong><br>1≤n≤100000<br><strong>输入样例：</strong><br>5<br>1 2 2 3 5<br><strong>输出样例：</strong><br>3</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a><strong>解题思路</strong></h2><p>s记录a[i]的个数，当a[i]个数&gt;1时，将j-i的数字都删除，并且将s[a[i]] = 1；<br>不断刷新ans的值；</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line"><span class="comment">#include&lt;map&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 1e5 + 10;</span><br><span class="line">int a[N],s[N];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    ios::sync_with_stdio(<span class="literal">false</span>);</span><br><span class="line">    cin.tie(0);</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)cin&gt;&gt;a[i];</span><br><span class="line">    int l = 1, r = 1, ans = -999;</span><br><span class="line">    </span><br><span class="line">    //map&lt;int,int&gt; s;</span><br><span class="line">    //s.insert(a[l]);</span><br><span class="line">    <span class="keyword">for</span>(int i = 1,j = 1; i &lt;= n ;i++)&#123;</span><br><span class="line">        s[a[i]]++;</span><br><span class="line">        <span class="keyword">while</span>(j &lt;= i &amp;&amp; s[a[i]] &gt; 1)&#123;</span><br><span class="line">            s[a[j]]--;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        ans = max(ans,i - j + 1);</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;ans&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 双指针 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>二进制中1的个数</title>
      <link href="/2019/09/19/lowbit/"/>
      <url>/2019/09/19/lowbit/</url>
      
        <content type="html"><![CDATA[<h1 id="二进制中1的个数"><a href="#二进制中1的个数" class="headerlink" title="二进制中1的个数"></a>二进制中1的个数</h1><hr><p><code>例题:</code></p><p>给定一个长度为n的数列，请你求出数列中每个数的二进制表示中1的个数。</p><p><strong>输入格式</strong><br>第一行包含整数n。</p><p>第二行包含n个整数，表示整个数列。</p><p><strong>输出格式</strong><br>共一行，包含n个整数，其中的第 i 个数表示数列中的第 i 个数的二进制表示中1的个数。</p><p><strong>数据范围</strong><br>1≤n≤100000,<br>0≤数列中元素的值≤109<br>输入样例：<br>5<br>1 2 3 4 5<br><strong>输出样例：</strong><br>1 1 2 1 2</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 1e5 + 10;</span><br><span class="line">//暴力解法</span><br><span class="line">/*int get(int x)&#123;</span><br><span class="line">    int cnt = 0;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        <span class="keyword">if</span>(x &amp; 1)cnt ++;</span><br><span class="line">        x &gt;&gt;= 1;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> cnt;</span><br><span class="line">&#125;*/</span><br><span class="line">//在计算机中是以二进制补码存储的，例如:</span><br><span class="line">//负数补码为取反+1</span><br><span class="line">//x = 010001</span><br><span class="line">//-x = 101110</span><br><span class="line">// x &amp; (-x) 得到最后一位为1的数；</span><br><span class="line">//再将其去掉，不断进行，直到没有1；</span><br><span class="line">//也可等于x &amp; (x - 1)；</span><br><span class="line"></span><br><span class="line">int lowbit(int x)&#123;</span><br><span class="line">    int res = 0;</span><br><span class="line">    <span class="keyword">while</span>(x)&#123;</span><br><span class="line">        x -= (x &amp; (-x));</span><br><span class="line">        res ++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">int a[N];</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    int n;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">while</span>(n--)&#123;</span><br><span class="line">        int x;</span><br><span class="line">        cin&gt;&gt;x;</span><br><span class="line">        cout&lt;&lt;lowbit(x)&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> lowbit </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>差分矩阵</title>
      <link href="/2019/09/19/chafenjuzheng/"/>
      <url>/2019/09/19/chafenjuzheng/</url>
      
        <content type="html"><![CDATA[<h1 id="差分矩阵"><a href="#差分矩阵" class="headerlink" title="差分矩阵"></a>差分矩阵</h1><hr><p><code>例题:</code></p><p>输入一个n行m列的整数矩阵，再输入q个操作，每个操作包含五个整数x1, y1, x2, y2, c，其中(x1, y1)和(x2, y2)表示一个子矩阵的左上角坐标和右下角坐标。</p><p>每个操作都要将选中的子矩阵中的每个元素的值加上c。</p><p>请你将进行完所有操作后的矩阵输出。</p><p><strong>输入格式</strong><br>第一行包含整数n,m,q。</p><p>接下来n行，每行包含m个整数，表示整数矩阵。</p><p>接下来q行，每行包含5个整数x1, y1, x2, y2, c，表示一个操作。</p><p>输出格式<br>共 n 行，每行 m 个整数，表示所有操作进行完毕后的最终矩阵。</p><p><strong>数据范围</strong><br>1≤n,m≤1000,<br>1≤q≤100000,<br>1≤x1≤x2≤n,<br>1≤y1≤y2≤m,<br>−1000≤c≤1000,<br>−1000≤矩阵内元素的值≤1000<br><strong>输入样例：</strong><br>3 4 3<br>1 2 2 1<br>3 2 2 1<br>1 1 1 1<br>1 1 2 2 1<br>1 3 2 3 2<br>3 1 3 4 1<br><strong>输出样例：</strong><br>2 3 4 1<br>4 3 4 1<br>2 2 2 2</p><h2 id="解题思路"><a href="#解题思路" class="headerlink" title="解题思路"></a>解题思路</h2><p>前面我们学习了一维数组的差分；可知a[i]为b[i]的前缀和；<br>在二维矩阵中，前缀和公式为s[i][j] = a[i][j] + s[i][j - 1] + s[i - 1][j] - s[i - 1][j - 1]<br>故a[i][j] = b[i][j] + a[i][j - 1] + a[i - 1][j] - a[i - 1][j - 1]<br>  b[i][j] = a[i][j] + a[i - 1][j - 1] - a[i][j - 1] - a[i - 1][j]<br>可知b[i][j]就是原数组中对角线之差；<br>由于b矩阵为前缀和(累加得来)；<br>故：<br>要使矩阵中的值不变，只需要将四个角的值更改即可；<br>列：使左上角，右下角分别+c，左下角，右上角分别-c;所以矩阵中的值不变；</p><p><img alt="差分矩阵" data-src="/img/chafenjuzheng.png" class="lozad"></p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">const int N = 1e3 +10;</span><br><span class="line">int a[N][N],b[N][N];</span><br><span class="line">void inser(int x1,int y1,int x2,int y2,int c)&#123;</span><br><span class="line">    b[x1][y1] += c;</span><br><span class="line">    b[x1][y2 + 1] -= c;</span><br><span class="line">    b[x2 + 1][y1] -= c;</span><br><span class="line">    b[x2 + 1][y2 + 1] += c;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    int n,m,q;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;q;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j = 1; j &lt;= m; j++)&#123;</span><br><span class="line">            cin&gt;&gt;a[i][j];</span><br><span class="line">            inser(i,j,i,j,a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(q--)&#123;</span><br><span class="line">        int x1,x2,y1,y2,c;</span><br><span class="line">        cin&gt;&gt;x1&gt;&gt;y1&gt;&gt;x2&gt;&gt;y2&gt;&gt;c;</span><br><span class="line">        inser(x1,y1,x2,y2,c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j = 1; j &lt;= m; j++)&#123;</span><br><span class="line">            b[i][j] += b[i-1][j] + b[i][j - 1] - b[i - 1][j - 1];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j = 1; j &lt;= m; j++)&#123;</span><br><span class="line">            cout&lt;&lt;b[i][j]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        cout&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    //cout &lt;&lt; <span class="string">"Hello world!"</span> &lt;&lt; endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>差分</title>
      <link href="/2019/09/17/chafen/"/>
      <url>/2019/09/17/chafen/</url>
      
        <content type="html"><![CDATA[<h1 id="差分"><a href="#差分" class="headerlink" title="差分"></a>差分</h1><h2 id="例题"><a href="#例题" class="headerlink" title="例题:"></a><code>例题:</code></h2><p>输入一个长度为n的整数序列。<br>接下来输入m个操作，每个操作包含三个整数l, r, c，表示将序列中[l, r]之间的每个数加上c。<br>请你输出进行完所有操作后的序列。</p><p><strong>输入格式</strong><br>第一行包含两个整数n和m。</p><p>第二行包含n个整数，表示整数序列。</p><p>接下来m行，每行包含三个整数l，r，c，表示一个操作。</p><p><strong>输出格式</strong><br>共一行，包含n个整数，表示最终序列。</p><p><strong>数据范围</strong><br>1≤n,m≤100000,<br>1≤l≤r≤n,<br>−1000≤c≤1000,<br>−1000≤整数序列中元素的值≤1000</p><p><strong>输入样例：</strong><br>6 3<br>1 2 2 1 2 1<br>1 3 1<br>3 5 1<br>1 6 1<br><strong>输出样例：</strong><br>3 4 5 3 4 2</p><hr><p>定义s为原数组，b为差分数组；<br>b[i] = s[i] - s[i - 1]<br>所以 s为b的前缀和；<br>证明：<br>s[n] = s[1] + s[2] + s[2] + … s[n];<br>s[1] = b[1], s[2] = b[2] - b[1];类推得；<br>b[i] = b[1] + b[2] - b[1] + b[3] - b[2] + … + b[n] - b[n - 1];<br>前后抵消，得s为b的前缀和；</p><p>因此巧妙方法：<br>故要在l到r区间增加常数c，只需要在b[l] += c;并且b[r+1] -= c;即可<br>由前证s为b的前缀和，故这样在b[l]-b[r]值都增加了c,然而在b[r+1]后抵消了;</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include&lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;vector&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">vector&lt;int&gt; s(100010,0),b(100010,0);</span><br><span class="line">int <span class="function"><span class="title">main</span></span>()&#123;</span><br><span class="line">    int n,m;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)cin&gt;&gt;s[i];</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n; i++)b[i] = s[i] - s[i - 1];</span><br><span class="line">    <span class="keyword">while</span>(m--)&#123;</span><br><span class="line">        int x,y,z;</span><br><span class="line">        cin&gt;&gt;x&gt;&gt;y&gt;&gt;z;</span><br><span class="line">        b[x] += z;</span><br><span class="line">        b[y + 1] -= z;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(int i = 1; i &lt;= n ;i++)&#123;</span><br><span class="line">        b[i] += b[i - 1];</span><br><span class="line">        cout&lt;&lt;b[i]&lt;&lt;<span class="string">' '</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> acwing </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大数模板</title>
      <link href="/2019/09/16/biginterger/"/>
      <url>/2019/09/16/biginterger/</url>
      
        <content type="html"><![CDATA[<h3 id="大数加减乘除模板"><a href="#大数加减乘除模板" class="headerlink" title="大数加减乘除模板"></a>大数加减乘除模板</h3><p>利用vector的做法；</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line"><span class="comment">#include &lt;iostream&gt;</span></span><br><span class="line"><span class="comment">#include&lt;vector&gt;</span></span><br><span class="line"><span class="comment">#include&lt;algorithm&gt;</span></span><br><span class="line">using namespace std;</span><br><span class="line">//一个大整数一个整数的除法，和余数；</span><br><span class="line">vector&lt;int&gt; div(vector&lt;int&gt; &amp;A, int b, int &amp;r)&#123;</span><br><span class="line">    vector&lt;int&gt; c;</span><br><span class="line">    //int tmp = 0;</span><br><span class="line">    r = 0;</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        r = r * 10 + A[i];</span><br><span class="line">        c.push_back(r / b);</span><br><span class="line">        r = r % b;</span><br><span class="line">    &#125;</span><br><span class="line">    reverse(c.begin(),c.end());</span><br><span class="line">    <span class="keyword">while</span>(c.size() &gt; 1 &amp;&amp; c.back() == 0) c.pop_back();</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">//一个大整数，一个整数的乘法</span><br><span class="line">vector&lt;int&gt; muti(vector&lt;int&gt;A, int b)&#123;</span><br><span class="line">    vector&lt;int&gt; c;</span><br><span class="line">    int tmp = 0;</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        tmp += A[i] * b;</span><br><span class="line">        c.push_back(tmp % 10);</span><br><span class="line">        tmp /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span>(tmp)&#123;</span><br><span class="line">        c.push_back(tmp % 10);</span><br><span class="line">        tmp /= 10;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">//两个大整数</span><br><span class="line">vector&lt;int&gt; muti1(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    vector&lt;int&gt; c(A.size() + B.size());</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        <span class="keyword">for</span>(int j = 0; j &lt; B.size(); j++)&#123;</span><br><span class="line">            c[i + j + 1] += A[i] * B[j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(int i = A.size() + B.size() - 1; i &gt; 0; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(c[i] &gt;= 10)&#123;</span><br><span class="line">            c[i - 1] += c[i] / 10;</span><br><span class="line">            c[i] %= 10;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">//注意有可能有前导0；</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">//大数减法；</span><br><span class="line">bool cmp(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.size() != B.size()) <span class="built_in">return</span> A.size() &gt; B.size();</span><br><span class="line">    <span class="keyword">for</span>(int i = A.size() - 1; i &gt;= 0; i--)&#123;</span><br><span class="line">        <span class="keyword">if</span>(A[i] != B[i]) <span class="built_in">return</span> A[i] &gt; B[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;int&gt; sub(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    <span class="keyword">if</span>(cmp(A,B))&#123;</span><br><span class="line">        vector&lt;int&gt;c;</span><br><span class="line">        int tmp = 0;</span><br><span class="line">        <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">            tmp += A[i];</span><br><span class="line">            <span class="keyword">if</span>(i &lt; B.size()) tmp -= B[i];</span><br><span class="line">            c.push_back((tmp + 10)%10);</span><br><span class="line">            //tmp /= 10;</span><br><span class="line">            <span class="keyword">if</span>(tmp &lt; 0)tmp = -1;</span><br><span class="line">            <span class="keyword">else</span> tmp = 0;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">while</span>(c.size() &gt; 1 &amp;&amp; c.back() == 0) c.pop_back();</span><br><span class="line">        <span class="built_in">return</span> c;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">            cout&lt;&lt;<span class="string">"-"</span>;</span><br><span class="line">            <span class="built_in">return</span> sub(B,A);</span><br><span class="line">        &#125;</span><br><span class="line">&#125;</span><br><span class="line">//大数加法</span><br><span class="line">vector&lt;int&gt; add(vector&lt;int&gt; &amp;A, vector&lt;int&gt; &amp;B)&#123;</span><br><span class="line">    <span class="keyword">if</span>(A.size() &lt; B.size()) <span class="built_in">return</span> add(B,A);</span><br><span class="line">    int tmp = 0;</span><br><span class="line">    vector&lt;int&gt;c;</span><br><span class="line">    <span class="keyword">for</span>(int i = 0; i &lt; A.size(); i++)&#123;</span><br><span class="line">        tmp += A[i];</span><br><span class="line">        <span class="keyword">if</span>(i &lt; B.size())tmp += B[i];</span><br><span class="line">        c.push_back(tmp%10);</span><br><span class="line">        <span class="keyword">if</span>(tmp &gt;= 10) tmp = 1;</span><br><span class="line">        <span class="keyword">else</span> tmp = 0;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(tmp)c.push_back(tmp);</span><br><span class="line">    <span class="built_in">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line">int main()</span><br><span class="line">&#123;</span><br><span class="line">    string a,b;</span><br><span class="line">    //int b,r = 0;</span><br><span class="line">    cin&gt;&gt;a&gt;&gt;b;</span><br><span class="line">    vector&lt;int&gt;A,B,C;</span><br><span class="line">    <span class="keyword">for</span>(int i = a.length() - 1; i &gt;= 0; i--)A.push_back(a[i] - <span class="string">'0'</span>);</span><br><span class="line">    <span class="keyword">for</span>(int i = b.length() - 1; i &gt;= 0; i--)B.push_back(b[i] - <span class="string">'0'</span>);</span><br><span class="line">    //C = div(A,b,r);</span><br><span class="line">    C = add(A,B);</span><br><span class="line">    <span class="keyword">for</span>(int i = C.size() - 1; i &gt;= 0; i--)cout&lt;&lt;C[i];</span><br><span class="line">    cout&lt;&lt;endl;</span><br><span class="line">    //cout&lt;&lt;endl;</span><br><span class="line">    <span class="built_in">return</span> 0;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 大数 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> acwing </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello cheerfulman</title>
      <link href="/2019/09/11/hello-world/"/>
      <url>/2019/09/11/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/" target="_blank" rel="noopener">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/" target="_blank" rel="noopener">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html" target="_blank" rel="noopener">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues" target="_blank" rel="noopener">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo new <span class="string">"My New Post"</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html" target="_blank" rel="noopener">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html" target="_blank" rel="noopener">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html" target="_blank" rel="noopener">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/deployment.html" target="_blank" rel="noopener">Deployment</a></p>]]></content>
      
      
      
    </entry>
    
    
  
  
</search>
